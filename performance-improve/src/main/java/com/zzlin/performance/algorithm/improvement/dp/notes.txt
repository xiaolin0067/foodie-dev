动态规划套路

问题一
机器人运动问题

int n, 一共有n个位置, 正整数大于1：1, 2, 3 ... n
int s, start机器人初始位置, 1 <= s <= n
int e, end机器人要到的位置
int k, 机器人每次必须走k步
机器人可以往左走也可以往右走，从s到e有多少中方法

递归 -> 记忆化搜索
加缓存

递归 -> 严格表结构的动态规划
例如：n=5, s=2, e=4, k=4
rest\cur | 0 | 1 | 2 | 3 | 4 | 5 |
-----------------------------------
  0      | X | 0 | 0 | 0 | 1 | 0 |
  1      | X | 0 | 0 | 1 | 0 | 1 |
  2      | X | 0 | 1 | 0 | 2 | 0 |
  3      | X | 1 | 0 | 3 | 0 | 2 |
  4      | X | 0 | 4 | 0 | 5 | 0 |
根据递归函数可以得到：
1)rest = 0时,只有4位置是1其余都是0
2)cur = 1时,等于右上角的值
3)cur = 5时,等于左上角的值
4)cur = 中间时,等于左右上角值的和
完善动态规划表

