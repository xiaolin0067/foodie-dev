<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzlin.mapper.ItemsMapperCustom" >
    
    <select id="queryItemComments" parameterType="Map" resultType="com.zzlin.pojo.vo.ItemCommentVO">
        SELECT
            c.comment_level AS commentLevel,
            c.content AS content,
            c.sepc_name AS specName,
            c.created_time AS createdTime,
            u.face AS userFace,
            u.nickname AS nickname
        FROM
            items_comments c
            LEFT JOIN users u ON c.user_id = u.id
        WHERE
            c.item_id = #{paramsMap.itemId}
            <if test="paramsMap.level != null and paramsMap.level != ''">
                AND c.comment_level = #{paramsMap.level}
            </if>
    </select>

    <!--
        字符串拼接，不可使用 #，需改用 $
        k: 默认排序，名称
        c: 根据销量排序
        p: 根据价格排序
        mybatis标签中需要将单引号 ' 转义为 &quot;
    -->
    <select id="searchItems" parameterType="Map" resultType="com.zzlin.pojo.vo.SearchItemsVO">
        SELECT
            i.id AS itemId,
            i.item_name AS itemName,
            i.sell_counts AS sellCounts,
            ii.url AS imgUrl,
            s.price_discount AS price
        FROM
            items i
            LEFT JOIN items_img ii ON i.id = ii.item_id
            LEFT JOIN
            (
            SELECT s.item_id, min( s.price_discount ) AS price_discount FROM items_spec s
            GROUP BY s.item_id
            ) s
            ON ii.item_id = s.item_id
        WHERE ii.is_main = 1
        <if test="paramsMap.keywords != null and paramsMap.keywords != ''">
            AND i.item_name LIKE '%${paramsMap.keywords}%'
        </if>
        ORDER BY
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                s.price_discount
            </when>
            <otherwise>
                i.item_name
            </otherwise>
        </choose>
    </select>

    <select id="searchItemsByCatId" parameterType="Map" resultType="com.zzlin.pojo.vo.SearchItemsVO">
        SELECT
        i.id AS itemId,
        i.item_name AS itemName,
        i.sell_counts AS sellCounts,
        ii.url AS imgUrl,
        s.price_discount AS price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN
        (
        SELECT s.item_id, min( s.price_discount ) AS price_discount FROM items_spec s
        GROUP BY s.item_id
        ) s
        ON ii.item_id = s.item_id
        WHERE ii.is_main = 1 AND i.cat_id = #{paramsMap.catId}
        ORDER BY
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                s.price_discount
            </when>
            <otherwise>
                i.item_name
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.zzlin.pojo.vo.ShopCartVO">
        SELECT
            s.item_id AS itemId,
            ii.url AS itemImgUrl,
            i.item_name AS itemName,
            s.id AS specId,
            s.`name` AS specName,
            s.price_discount AS priceDiscount,
            s.price_normal AS priceNormal
        FROM
            items_spec s
            LEFT JOIN items i ON s.item_id = i.id
            LEFT JOIN items_img ii ON i.id = ii.item_id
        WHERE
            ii.is_main = 1
            AND s.id IN
            <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
                #{specId}
            </foreach>
    </select>
</mapper>