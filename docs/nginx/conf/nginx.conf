# worker进程运行用户
user  root;
# worker进程, cpu核心数-1
worker_processes  2;

# 日志级别：debug info notice warn error crit
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    # 默认也使用epoll，可不配置
    use epoll;
    # 每个worker最大客户端连接数
    worker_connections  10240;
}


http {
    # 导入文件
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    # 文件高效传输
    sendfile        on;
    # sendfile开启后才有效，数据包达到一定量后才发送以提高效率
    #tcp_nopush     on;

    #keepalive_timeout  0;
    #一个http请求之后客户端与服务器保持连接不断开以供下次请求的连接保持时间
    keepalive_timeout  65;

    #传输内容是否压缩，提高传输效率，节约带宽
    gzip  on;
    #限制最小压缩大小，小于1字节文件不会压缩
    gzip_min_length 1;
    # 压缩级别（1~9），级别越高压缩率越大CPU使用越大
    gzip_comp_level 3;
    # 需要压缩的文件类型
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/json;

    include myNginx.conf;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
