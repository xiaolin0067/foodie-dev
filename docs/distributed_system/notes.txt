分布式架构概述
规划内容：
    分布式缓存中间件Redis、分布式会话与单点登录、分布式搜索引擎Elasticsearch
    分布式文件系统、分布式消息队列
    分布式锁、数据库读写分离与分库分表、数据库表全局唯一主键ID设计
    分布式事务与数据一致性、接口幂等设计与分布式限流

分布式架构优点：
    业务解耦
    系统模块化，可重用化
    提高系统并发量
    优化运维部署效率
分布式架构缺点：
    架构复杂
    部署多个子系统复杂
    系统之间通信耗时
    新人融入团队缓慢
    调试复杂

设计原则：
    异步解耦(能使用异步就使用异步，除非不得已)
    幂等一致性(对于用户一次操作中的多次点击请求需要保证最终一致性)
    拆分原则
    融合分布式中间件
    容错高可用

NoSql
    优点：高性能读取、高可用、存数据, 做缓存
    常见分类：
        键值对数据库(key-value) Redis, Memcache
        列存储数据库 Hbase, Cassandra
        文档型数据库 MongoDB, CouchDB
        图形数据库   Neo4J, FlockDB

Redis
    Nosql, 分布式缓存中间件, Key-value存储
    提供海量数据存储访问
    数据存储在内存，读取更快
    非关系型、分布式、开源、水平扩展
    持久化
    主从同步, 故障转移
    缺点：单线程、单核
与Memcache相比：Memcache不能够持久化容灾

Redis安装
https://redis.io
解压安装包，进入解压后的目录，安装gcc-c++
yum install -y gcc-c++
编译与安装
make && make install
复制Redis启动文件到/etc/init.d/
cp utils/redis_init_script /etc/init.d/
配置Redis
cd /usr/local/redis
创建工作目录
mkdir working
    编辑配置
    vim redis.conf
    在后台运行
    daemonize yes
    工作目录
    dir /usr/local/redis/working
    允许访问的IP
    bind 0.0.0.0
    访问端口
    port 6379
    访问密码
    requirepass 123456
    进程号文件
    pidfile /var/run/redis_6379.pid

编辑Redis启动脚本
    cd /etc/init.d
    vim redis_init_script
    修改配置文件
    CONF="/use/local/redis/redis.conf"
    修改脚本权限
    chmod +x redis_init_script
    启动Redis
    ./redis_init_script start
    开机自启动
    chkconfig redis_init_script on

redisl-cli使用
直接在命令行使用命令
    redis-cli -a 123456 get name
    redis-cli -a 123456 ping
    给缓存设置过期时间
    set name test PX 3000

停止Redis
1.直接kill Redis pid
2.修改redis_init_script脚本，增加密码
$CLIEXEC -a 123456 -p $REDISPORT shutdown
保存退出后执行
./redis_init_script stop
