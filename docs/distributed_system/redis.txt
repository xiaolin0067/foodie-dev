Redis
    Nosql, 分布式缓存中间件, Key-value存储
    提供海量数据存储访问
    数据存储在内存，读取更快
    非关系型、分布式、开源、水平扩展
    持久化
    主从同步, 故障转移
    缺点：单线程、单核
与Memcache相比：Memcache不能够持久化容灾

Redis安装
https://redis.io
解压安装包，进入解压后的目录，安装gcc-c++
yum install -y gcc-c++
编译与安装
make && make install
复制Redis启动文件到/etc/init.d/
cp utils/redis_init_script /etc/init.d/
配置Redis
cd /usr/local/redis
创建工作目录
mkdir working
    编辑配置
    vim redis.conf
    在后台运行
    daemonize yes
    工作目录
    dir /usr/local/redis/working
    允许访问的IP
    bind 0.0.0.0
    访问端口
    port 6379
    访问密码
    requirepass 123456
    进程号文件
    pidfile /var/run/redis_6379.pid

编辑Redis启动脚本
    cd /etc/init.d
    vim redis_init_script
    修改配置文件
    CONF="/use/local/redis/redis.conf"
    修改脚本权限
    chmod +x redis_init_script
    启动Redis
    ./redis_init_script start
    开机自启动
    chkconfig redis_init_script on

redisl-cli使用
登录
    redis-cli 或者 redis-cli -p 6379 -h 127.0.0.1
鉴权
    auth 123456
基础使用
    set age 18
    get age
    del age
命令补全，输入命令得一部分然后按TAB键
直接在命令行使用命令
    redis-cli -a 123456 get name
    redis-cli -a 123456 ping

停止Redis
1.直接kill Redis pid
2.修改redis_init_script脚本，增加密码
$CLIEXEC -a 123456 -p $REDISPORT shutdown
保存退出后执行
./redis_init_script stop

Redis的数据类型
string类型
查看所有的key，生产环境禁用，因生产环境key太多
匹配所有
    keys *
匹配以age开头
    keys age*
查看key的value类型
    type age
set会覆盖value，SETNX则不会覆盖，若key存在则不设置
    setnx age 20
查看缓存过期时间，time to leave，-1为永不过期，-2为已过期
    ttl age
给已添加的缓存设置过期时间，单位秒
    expire age 30
设置缓存时给缓存设置过期时间，ex为s, px为ms
    set name test px 3000
清除屏幕
    clear
value拼接字符串
    append email 123
查看字符串长度
    STRLEN email
对于数字类型value累加操作，步长为1
    incr age
对于数字类型value累减操作，步长为1
    decr age
对于数字类型value累加操作，自定义步长
    INCRBY age 10
对于数字类型value累减操作，自定义步长
    DECRBY age 10
获取value字符串指定范围内的内容, -1为最后位置
    getrange age 0 -1
在指定index开始覆盖字符串
    SETRANGE email 1 abc
一次设置多个键值对
    MSET k1 v1 k2 v2
一次获取多个键值对
    MGET k1 k2
一次设置多个键值对，若设置的key中存在已存在的key，则整个操作都会撤销
    MSETNX k2 v2 k3 v3
redis默认有16个数据库，在redis.conf配置文件中配置databases 16
使用命令select ${dbIndex}来切换库，可在不同的项目中使用不同的库
清除当前库的所有数据
    flushdb
清除所有库的所有数据
    flushall

hash类型
类似与将一个map存入value中，可以将结构化数据存入redis
    hset user name testName
    hget user name
同时设置多个值
    hmset user age 18 sex man
同时获取多个值
    hmget user name age sex
获取对象所有键值对
    hgetall user
获取对象属性字段数量
    hlen user
打印对象所有的key
    hkeys user
打印对象所有的value
    hvals user
对象数字属性值增加，指定增加值
    HINCRBY user age 2
对象数字属性值增加，指定增加值为浮点数
    HINCRBYFLOAT user age 3.2
对象属性是否存在
    HEXISTS user age
删除对象属性
    HDEL user name
















